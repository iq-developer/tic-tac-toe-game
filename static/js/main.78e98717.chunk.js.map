{"version":3,"sources":["Footer.js","Button.js","Buttons.js","helpers/data.js","helpers/randomInteger.js","helpers/checkWin.js","helpers/fullscreen.js","App.js","index.js"],"names":["Footer","className","href","alt","src","width","Button","state","setState","id","value","marked","setIsRobotStep","isFinished","disabled","onClick","find","item","alert","map","Buttons","isRobotStep","data","arr","i","push","randomInteger","min","max","rand","Math","random","round","checkWin","sign","result","forEach","stateClone","elem","console","log","fullscreen","document","documentElement","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","App","useState","message","setMessage","setIsFinished","messageClassName","setMessageClassName","checkWinX","length","emptyCells","filter","randomCellNumber","newState","checkWinO","playAgain","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.78e98717.chunk.js","sourcesContent":["function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>Developed in 2021-2022 by <a href=\"https://github.com/iq-developer\">Volodymyr Sevastianov</a> at <a href=\"https://rs.school/js/\"><img alt=\"RS School logo\" src=\"https://rs.school/images/rs_school_js.svg\" width=\"50\" /></a></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import './index.css';\r\n\r\nconst Button = ({ state, setState, id, value, marked, setIsRobotStep, isFinished }) => {\r\n\r\n  const handleButtonClick = () => {\r\n\r\n    if (state.find(item => (item.id === id) && value)) {\r\n      alert('This place is already occupied. Try another one.');\r\n      return;\r\n    }\r\n\r\n    setState(state.map(item => {\r\n      if (item.id === id) {\r\n        return (\r\n          { ...item, value: '✖' }\r\n        )\r\n      }\r\n      return (\r\n        { ...item }\r\n      )\r\n    }));\r\n\r\n    setIsRobotStep(true);\r\n  }\r\n\r\n  return (\r\n    <button className={isFinished ? \"disabled \" + marked : \"bar \" + value} disabled={isFinished} onClick={handleButtonClick} >{value}</button>\r\n  )\r\n\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Buttons = ({state, setState, isRobotStep, setIsRobotStep, isFinished}) => {\r\n\r\n  return (\r\n    state.map(item => {\r\n      return <Button\r\n        key={item.id}\r\n        value={item.value}\r\n        id={item.id}\r\n        marked={item.marked}\r\n        state={state}\r\n        setState={setState}\r\n        isRobotStep={isRobotStep}\r\n        setIsRobotStep={setIsRobotStep}\r\n        isFinished={isFinished}\r\n      />\r\n    })\r\n  )\r\n}\r\n\r\nexport default Buttons;\r\n","const data = () => {\r\n  const arr = [];\r\n  for (let i = 0; i < 9; i++) {\r\n    arr.push({\r\n      id: i,\r\n      value: ''\r\n    })\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport default data;\r\n","const randomInteger = (min, max) => {\r\n  const rand = min - 0.5 + Math.random() * (max - min + 1);\r\n  return Math.round(rand);\r\n}\r\n\r\nexport default randomInteger;\r\n","const checkWin = (state, sign) => {\r\n\r\n  const winPositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\r\n\r\n  let result = [];\r\n\r\n  winPositions.forEach(item => {\r\n    if ((state[item[0]].value === sign) && (state[item[1]].value === sign) && (state[item[2]].value === sign)) {\r\n\r\n      const stateClone = state.map(elem => ({ ...elem }));\r\n      stateClone[item[0]].marked = 'marked';\r\n      stateClone[item[1]].marked = 'marked';\r\n      stateClone[item[2]].marked = 'marked';\r\n      result = stateClone;\r\n\r\n    }\r\n  });\r\n\r\n  console.log('result: ', result);\r\n  return result;\r\n}\r\n\r\nexport default checkWin;\r\n","const fullscreen = () => {\r\n\r\n  const elem = document.documentElement;\r\n  if (!document.fullscreenElement && !document.mozFullScreenElement &&\r\n    !document.webkitFullscreenElement && !document.msFullscreenElement) {\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n      elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n    }\r\n  } else {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nexport default fullscreen;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Footer from './Footer';\r\nimport Buttons from './Buttons';\r\nimport data from \"./helpers/data\";\r\nimport { useState } from 'react';\r\nimport randomInteger from './helpers/randomInteger';\r\nimport checkWin from './helpers/checkWin';\r\nimport fullscreen from './helpers/fullscreen';\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('Play again');\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [state, setState] = useState(data());\r\n  const [isRobotStep, setIsRobotStep] = useState(false);\r\n  const [messageClassName, setMessageClassName] = useState('');\r\n\r\n  if (isRobotStep) {\r\n\r\n    const checkWinX = checkWin(state, '✖');\r\n\r\n    if (checkWinX.length) {\r\n      setState(checkWinX);\r\n      setMessageClassName('win');\r\n      setMessage('✖ wins. Play again?');\r\n      setIsFinished(true);\r\n    } else {\r\n\r\n      const emptyCells = state.filter(item => !item.value);\r\n\r\n      if (!emptyCells.length) {\r\n        setMessageClassName('loose');\r\n        setMessage('Draw - nobody wins. Play again?');\r\n        setIsFinished(true);\r\n      } else {\r\n\r\n        const randomCellNumber = randomInteger(0, emptyCells.length - 1);\r\n\r\n        const newState = (state.map(item => {\r\n          if (item.id === emptyCells[randomCellNumber].id) {\r\n            return (\r\n              { ...item, value: 'O' }\r\n            )\r\n          }\r\n          return (\r\n            { ...item }\r\n          )\r\n        }));\r\n\r\n        setState(newState);\r\n\r\n        const checkWinO = checkWin(state, 'O');\r\n\r\n        if (checkWinO.length) {\r\n          setState(checkWinO);\r\n          setMessageClassName('loose');\r\n          setMessage('O wins. Play again?');\r\n          setIsFinished(true);\r\n        }\r\n      }\r\n\r\n    }\r\n    setIsRobotStep(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"header\">\r\n        <h1>Tic-tac-toe React game</h1>\r\n      </div>\r\n      <div id=\"btnfullscreen\" onClick={fullscreen}>Fullscreen on/off</div>\r\n      <div id=\"message\" className={messageClassName} onClick={() => playAgain(state)}>{message}</div>\r\n      <div className=\"field\">\r\n        <Buttons\r\n          state={state}\r\n          setState={setState}\r\n          isRobotStep={isRobotStep}\r\n          setIsRobotStep={setIsRobotStep}\r\n          isFinished={isFinished}\r\n        />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n\r\n  function playAgain(state) {\r\n    setState(checkWin(state, 'O'));\r\n    setMessage('Play again');\r\n    setMessageClassName('');\r\n    setIsFinished(false);\r\n    setState(data());\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}